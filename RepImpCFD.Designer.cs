//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace RepresentacionImpresaCFDI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepImpCFD")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepImpCFD : global::System.Data.DataSet {
        
        private FacturaGDataTable tableFacturaG;
        
        private FacturaDDataTable tableFacturaD;
        
        private global::System.Data.DataRelation relationFacturaG_FacturaD;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepImpCFD() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepImpCFD(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FacturaG"] != null)) {
                    base.Tables.Add(new FacturaGDataTable(ds.Tables["FacturaG"]));
                }
                if ((ds.Tables["FacturaD"] != null)) {
                    base.Tables.Add(new FacturaDDataTable(ds.Tables["FacturaD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FacturaGDataTable FacturaG {
            get {
                return this.tableFacturaG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FacturaDDataTable FacturaD {
            get {
                return this.tableFacturaD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepImpCFD cln = ((RepImpCFD)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FacturaG"] != null)) {
                    base.Tables.Add(new FacturaGDataTable(ds.Tables["FacturaG"]));
                }
                if ((ds.Tables["FacturaD"] != null)) {
                    base.Tables.Add(new FacturaDDataTable(ds.Tables["FacturaD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFacturaG = ((FacturaGDataTable)(base.Tables["FacturaG"]));
            if ((initTable == true)) {
                if ((this.tableFacturaG != null)) {
                    this.tableFacturaG.InitVars();
                }
            }
            this.tableFacturaD = ((FacturaDDataTable)(base.Tables["FacturaD"]));
            if ((initTable == true)) {
                if ((this.tableFacturaD != null)) {
                    this.tableFacturaD.InitVars();
                }
            }
            this.relationFacturaG_FacturaD = this.Relations["FacturaG_FacturaD"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepImpCFD";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RepImpCFD.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFacturaG = new FacturaGDataTable();
            base.Tables.Add(this.tableFacturaG);
            this.tableFacturaD = new FacturaDDataTable();
            base.Tables.Add(this.tableFacturaD);
            this.relationFacturaG_FacturaD = new global::System.Data.DataRelation("FacturaG_FacturaD", new global::System.Data.DataColumn[] {
                        this.tableFacturaG.serieColumn,
                        this.tableFacturaG.folioColumn}, new global::System.Data.DataColumn[] {
                        this.tableFacturaD.serieColumn,
                        this.tableFacturaD.folioColumn}, false);
            this.Relations.Add(this.relationFacturaG_FacturaD);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFacturaG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFacturaD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepImpCFD ds = new RepImpCFD();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void FacturaGRowChangeEventHandler(object sender, FacturaGRowChangeEvent e);
        
        public delegate void FacturaDRowChangeEventHandler(object sender, FacturaDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FacturaGDataTable : global::System.Data.TypedTableBase<FacturaGRow> {
            
            private global::System.Data.DataColumn columnversion;
            
            private global::System.Data.DataColumn columnserie;
            
            private global::System.Data.DataColumn columnfolio;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnformaDePago;
            
            private global::System.Data.DataColumn columncondicionesDePago;
            
            private global::System.Data.DataColumn columnsubTotal;
            
            private global::System.Data.DataColumn columndescuento;
            
            private global::System.Data.DataColumn columnmotivoDescuento;
            
            private global::System.Data.DataColumn columnTipoCambio;
            
            private global::System.Data.DataColumn columnMoneda;
            
            private global::System.Data.DataColumn columntotal;
            
            private global::System.Data.DataColumn columnmetodoDePago;
            
            private global::System.Data.DataColumn columntipoDeComprobante;
            
            private global::System.Data.DataColumn columnsello;
            
            private global::System.Data.DataColumn columnnoCertificado;
            
            private global::System.Data.DataColumn columncertificado;
            
            private global::System.Data.DataColumn columnerfc;
            
            private global::System.Data.DataColumn columnenombre;
            
            private global::System.Data.DataColumn columnecalle;
            
            private global::System.Data.DataColumn columnenoExterior;
            
            private global::System.Data.DataColumn columnenoInterior;
            
            private global::System.Data.DataColumn columnereferencia;
            
            private global::System.Data.DataColumn columnecolonia;
            
            private global::System.Data.DataColumn columnelocalidad;
            
            private global::System.Data.DataColumn columnemunicipio;
            
            private global::System.Data.DataColumn columneestado;
            
            private global::System.Data.DataColumn columnepais;
            
            private global::System.Data.DataColumn columnecodigoPostal;
            
            private global::System.Data.DataColumn columnxcalle;
            
            private global::System.Data.DataColumn columnxnoExterior;
            
            private global::System.Data.DataColumn columnxnoInterior;
            
            private global::System.Data.DataColumn columnxreferencia;
            
            private global::System.Data.DataColumn columnxcolonia;
            
            private global::System.Data.DataColumn columnxlocalidad;
            
            private global::System.Data.DataColumn columnxmunicipio;
            
            private global::System.Data.DataColumn columnxestado;
            
            private global::System.Data.DataColumn columnxpais;
            
            private global::System.Data.DataColumn columnxcodigoPostal;
            
            private global::System.Data.DataColumn columnrrfc;
            
            private global::System.Data.DataColumn columnrnombre;
            
            private global::System.Data.DataColumn columnrcalle;
            
            private global::System.Data.DataColumn columnrnoExterior;
            
            private global::System.Data.DataColumn columnrnoInterior;
            
            private global::System.Data.DataColumn columnrreferencia;
            
            private global::System.Data.DataColumn columnrcolonia;
            
            private global::System.Data.DataColumn columnrlocalidad;
            
            private global::System.Data.DataColumn columnrmunicipio;
            
            private global::System.Data.DataColumn columnrestado;
            
            private global::System.Data.DataColumn columnrpais;
            
            private global::System.Data.DataColumn columnrcodigoPostal;
            
            private global::System.Data.DataColumn columnimpuesto;
            
            private global::System.Data.DataColumn columntasa;
            
            private global::System.Data.DataColumn columnimporte;
            
            private global::System.Data.DataColumn columnselloCFD;
            
            private global::System.Data.DataColumn columnFechaTimbrado;
            
            private global::System.Data.DataColumn columnUUID;
            
            private global::System.Data.DataColumn columnversiont;
            
            private global::System.Data.DataColumn columnnoCertificadoSAT;
            
            private global::System.Data.DataColumn columnselloSAT;
            
            private global::System.Data.DataColumn columneTelefono;
            
            private global::System.Data.DataColumn columnrTelefono;
            
            private global::System.Data.DataColumn columnLogotipo1;
            
            private global::System.Data.DataColumn columnLogotipo2;
            
            private global::System.Data.DataColumn columnCBBQR;
            
            private global::System.Data.DataColumn columnEncaCFD;
            
            private global::System.Data.DataColumn columnEncaTitulo1;
            
            private global::System.Data.DataColumn columnEncaTitulo2;
            
            private global::System.Data.DataColumn columnEncaTitulo3;
            
            private global::System.Data.DataColumn columnNota1;
            
            private global::System.Data.DataColumn columnNota2;
            
            private global::System.Data.DataColumn columnNota3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaGDataTable() {
                this.TableName = "FacturaG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FacturaGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FacturaGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn versionColumn {
                get {
                    return this.columnversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn serieColumn {
                get {
                    return this.columnserie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn folioColumn {
                get {
                    return this.columnfolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn formaDePagoColumn {
                get {
                    return this.columnformaDePago;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn condicionesDePagoColumn {
                get {
                    return this.columncondicionesDePago;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subTotalColumn {
                get {
                    return this.columnsubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descuentoColumn {
                get {
                    return this.columndescuento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn motivoDescuentoColumn {
                get {
                    return this.columnmotivoDescuento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoCambioColumn {
                get {
                    return this.columnTipoCambio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalColumn {
                get {
                    return this.columntotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn metodoDePagoColumn {
                get {
                    return this.columnmetodoDePago;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipoDeComprobanteColumn {
                get {
                    return this.columntipoDeComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn selloColumn {
                get {
                    return this.columnsello;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noCertificadoColumn {
                get {
                    return this.columnnoCertificado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn certificadoColumn {
                get {
                    return this.columncertificado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn erfcColumn {
                get {
                    return this.columnerfc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn enombreColumn {
                get {
                    return this.columnenombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ecalleColumn {
                get {
                    return this.columnecalle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn enoExteriorColumn {
                get {
                    return this.columnenoExterior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn enoInteriorColumn {
                get {
                    return this.columnenoInterior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ereferenciaColumn {
                get {
                    return this.columnereferencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ecoloniaColumn {
                get {
                    return this.columnecolonia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn elocalidadColumn {
                get {
                    return this.columnelocalidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emunicipioColumn {
                get {
                    return this.columnemunicipio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eestadoColumn {
                get {
                    return this.columneestado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn epaisColumn {
                get {
                    return this.columnepais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ecodigoPostalColumn {
                get {
                    return this.columnecodigoPostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xcalleColumn {
                get {
                    return this.columnxcalle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xnoExteriorColumn {
                get {
                    return this.columnxnoExterior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xnoInteriorColumn {
                get {
                    return this.columnxnoInterior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xreferenciaColumn {
                get {
                    return this.columnxreferencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xcoloniaColumn {
                get {
                    return this.columnxcolonia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xlocalidadColumn {
                get {
                    return this.columnxlocalidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xmunicipioColumn {
                get {
                    return this.columnxmunicipio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xestadoColumn {
                get {
                    return this.columnxestado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xpaisColumn {
                get {
                    return this.columnxpais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xcodigoPostalColumn {
                get {
                    return this.columnxcodigoPostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rrfcColumn {
                get {
                    return this.columnrrfc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rnombreColumn {
                get {
                    return this.columnrnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rcalleColumn {
                get {
                    return this.columnrcalle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rnoExteriorColumn {
                get {
                    return this.columnrnoExterior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rnoInteriorColumn {
                get {
                    return this.columnrnoInterior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rreferenciaColumn {
                get {
                    return this.columnrreferencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rcoloniaColumn {
                get {
                    return this.columnrcolonia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rlocalidadColumn {
                get {
                    return this.columnrlocalidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rmunicipioColumn {
                get {
                    return this.columnrmunicipio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn restadoColumn {
                get {
                    return this.columnrestado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rpaisColumn {
                get {
                    return this.columnrpais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rcodigoPostalColumn {
                get {
                    return this.columnrcodigoPostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn impuestoColumn {
                get {
                    return this.columnimpuesto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tasaColumn {
                get {
                    return this.columntasa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn importeColumn {
                get {
                    return this.columnimporte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn selloCFDColumn {
                get {
                    return this.columnselloCFD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaTimbradoColumn {
                get {
                    return this.columnFechaTimbrado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UUIDColumn {
                get {
                    return this.columnUUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn versiontColumn {
                get {
                    return this.columnversiont;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noCertificadoSATColumn {
                get {
                    return this.columnnoCertificadoSAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn selloSATColumn {
                get {
                    return this.columnselloSAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eTelefonoColumn {
                get {
                    return this.columneTelefono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rTelefonoColumn {
                get {
                    return this.columnrTelefono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Logotipo1Column {
                get {
                    return this.columnLogotipo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Logotipo2Column {
                get {
                    return this.columnLogotipo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CBBQRColumn {
                get {
                    return this.columnCBBQR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EncaCFDColumn {
                get {
                    return this.columnEncaCFD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EncaTitulo1Column {
                get {
                    return this.columnEncaTitulo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EncaTitulo2Column {
                get {
                    return this.columnEncaTitulo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EncaTitulo3Column {
                get {
                    return this.columnEncaTitulo3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nota1Column {
                get {
                    return this.columnNota1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nota2Column {
                get {
                    return this.columnNota2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nota3Column {
                get {
                    return this.columnNota3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaGRow this[int index] {
                get {
                    return ((FacturaGRow)(this.Rows[index]));
                }
            }
            
            public event FacturaGRowChangeEventHandler FacturaGRowChanging;
            
            public event FacturaGRowChangeEventHandler FacturaGRowChanged;
            
            public event FacturaGRowChangeEventHandler FacturaGRowDeleting;
            
            public event FacturaGRowChangeEventHandler FacturaGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFacturaGRow(FacturaGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaGRow AddFacturaGRow(
                        string version, 
                        string serie, 
                        string folio, 
                        string fecha, 
                        string formaDePago, 
                        string condicionesDePago, 
                        string subTotal, 
                        string descuento, 
                        string motivoDescuento, 
                        string TipoCambio, 
                        string Moneda, 
                        string total, 
                        string metodoDePago, 
                        string tipoDeComprobante, 
                        string sello, 
                        string noCertificado, 
                        string certificado, 
                        string erfc, 
                        string enombre, 
                        string ecalle, 
                        string enoExterior, 
                        string enoInterior, 
                        string ereferencia, 
                        string ecolonia, 
                        string elocalidad, 
                        string emunicipio, 
                        string eestado, 
                        string epais, 
                        string ecodigoPostal, 
                        string xcalle, 
                        string xnoExterior, 
                        string xnoInterior, 
                        string xreferencia, 
                        string xcolonia, 
                        string xlocalidad, 
                        string xmunicipio, 
                        string xestado, 
                        string xpais, 
                        string xcodigoPostal, 
                        string rrfc, 
                        string rnombre, 
                        string rcalle, 
                        string rnoExterior, 
                        string rnoInterior, 
                        string rreferencia, 
                        string rcolonia, 
                        string rlocalidad, 
                        string rmunicipio, 
                        string restado, 
                        string rpais, 
                        string rcodigoPostal, 
                        string impuesto, 
                        string tasa, 
                        string importe, 
                        string selloCFD, 
                        string FechaTimbrado, 
                        string UUID, 
                        string versiont, 
                        string noCertificadoSAT, 
                        string selloSAT, 
                        string eTelefono, 
                        string rTelefono, 
                        byte[] Logotipo1, 
                        byte[] Logotipo2, 
                        byte[] CBBQR, 
                        string EncaCFD, 
                        string EncaTitulo1, 
                        string EncaTitulo2, 
                        string EncaTitulo3, 
                        string Nota1, 
                        string Nota2, 
                        string Nota3) {
                FacturaGRow rowFacturaGRow = ((FacturaGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        version,
                        serie,
                        folio,
                        fecha,
                        formaDePago,
                        condicionesDePago,
                        subTotal,
                        descuento,
                        motivoDescuento,
                        TipoCambio,
                        Moneda,
                        total,
                        metodoDePago,
                        tipoDeComprobante,
                        sello,
                        noCertificado,
                        certificado,
                        erfc,
                        enombre,
                        ecalle,
                        enoExterior,
                        enoInterior,
                        ereferencia,
                        ecolonia,
                        elocalidad,
                        emunicipio,
                        eestado,
                        epais,
                        ecodigoPostal,
                        xcalle,
                        xnoExterior,
                        xnoInterior,
                        xreferencia,
                        xcolonia,
                        xlocalidad,
                        xmunicipio,
                        xestado,
                        xpais,
                        xcodigoPostal,
                        rrfc,
                        rnombre,
                        rcalle,
                        rnoExterior,
                        rnoInterior,
                        rreferencia,
                        rcolonia,
                        rlocalidad,
                        rmunicipio,
                        restado,
                        rpais,
                        rcodigoPostal,
                        impuesto,
                        tasa,
                        importe,
                        selloCFD,
                        FechaTimbrado,
                        UUID,
                        versiont,
                        noCertificadoSAT,
                        selloSAT,
                        eTelefono,
                        rTelefono,
                        Logotipo1,
                        Logotipo2,
                        CBBQR,
                        EncaCFD,
                        EncaTitulo1,
                        EncaTitulo2,
                        EncaTitulo3,
                        Nota1,
                        Nota2,
                        Nota3};
                rowFacturaGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFacturaGRow);
                return rowFacturaGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FacturaGDataTable cln = ((FacturaGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FacturaGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnversion = base.Columns["version"];
                this.columnserie = base.Columns["serie"];
                this.columnfolio = base.Columns["folio"];
                this.columnfecha = base.Columns["fecha"];
                this.columnformaDePago = base.Columns["formaDePago"];
                this.columncondicionesDePago = base.Columns["condicionesDePago"];
                this.columnsubTotal = base.Columns["subTotal"];
                this.columndescuento = base.Columns["descuento"];
                this.columnmotivoDescuento = base.Columns["motivoDescuento"];
                this.columnTipoCambio = base.Columns["TipoCambio"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columntotal = base.Columns["total"];
                this.columnmetodoDePago = base.Columns["metodoDePago"];
                this.columntipoDeComprobante = base.Columns["tipoDeComprobante"];
                this.columnsello = base.Columns["sello"];
                this.columnnoCertificado = base.Columns["noCertificado"];
                this.columncertificado = base.Columns["certificado"];
                this.columnerfc = base.Columns["erfc"];
                this.columnenombre = base.Columns["enombre"];
                this.columnecalle = base.Columns["ecalle"];
                this.columnenoExterior = base.Columns["enoExterior"];
                this.columnenoInterior = base.Columns["enoInterior"];
                this.columnereferencia = base.Columns["ereferencia"];
                this.columnecolonia = base.Columns["ecolonia"];
                this.columnelocalidad = base.Columns["elocalidad"];
                this.columnemunicipio = base.Columns["emunicipio"];
                this.columneestado = base.Columns["eestado"];
                this.columnepais = base.Columns["epais"];
                this.columnecodigoPostal = base.Columns["ecodigoPostal"];
                this.columnxcalle = base.Columns["xcalle"];
                this.columnxnoExterior = base.Columns["xnoExterior"];
                this.columnxnoInterior = base.Columns["xnoInterior"];
                this.columnxreferencia = base.Columns["xreferencia"];
                this.columnxcolonia = base.Columns["xcolonia"];
                this.columnxlocalidad = base.Columns["xlocalidad"];
                this.columnxmunicipio = base.Columns["xmunicipio"];
                this.columnxestado = base.Columns["xestado"];
                this.columnxpais = base.Columns["xpais"];
                this.columnxcodigoPostal = base.Columns["xcodigoPostal"];
                this.columnrrfc = base.Columns["rrfc"];
                this.columnrnombre = base.Columns["rnombre"];
                this.columnrcalle = base.Columns["rcalle"];
                this.columnrnoExterior = base.Columns["rnoExterior"];
                this.columnrnoInterior = base.Columns["rnoInterior"];
                this.columnrreferencia = base.Columns["rreferencia"];
                this.columnrcolonia = base.Columns["rcolonia"];
                this.columnrlocalidad = base.Columns["rlocalidad"];
                this.columnrmunicipio = base.Columns["rmunicipio"];
                this.columnrestado = base.Columns["restado"];
                this.columnrpais = base.Columns["rpais"];
                this.columnrcodigoPostal = base.Columns["rcodigoPostal"];
                this.columnimpuesto = base.Columns["impuesto"];
                this.columntasa = base.Columns["tasa"];
                this.columnimporte = base.Columns["importe"];
                this.columnselloCFD = base.Columns["selloCFD"];
                this.columnFechaTimbrado = base.Columns["FechaTimbrado"];
                this.columnUUID = base.Columns["UUID"];
                this.columnversiont = base.Columns["versiont"];
                this.columnnoCertificadoSAT = base.Columns["noCertificadoSAT"];
                this.columnselloSAT = base.Columns["selloSAT"];
                this.columneTelefono = base.Columns["eTelefono"];
                this.columnrTelefono = base.Columns["rTelefono"];
                this.columnLogotipo1 = base.Columns["Logotipo1"];
                this.columnLogotipo2 = base.Columns["Logotipo2"];
                this.columnCBBQR = base.Columns["CBBQR"];
                this.columnEncaCFD = base.Columns["EncaCFD"];
                this.columnEncaTitulo1 = base.Columns["EncaTitulo1"];
                this.columnEncaTitulo2 = base.Columns["EncaTitulo2"];
                this.columnEncaTitulo3 = base.Columns["EncaTitulo3"];
                this.columnNota1 = base.Columns["Nota1"];
                this.columnNota2 = base.Columns["Nota2"];
                this.columnNota3 = base.Columns["Nota3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnversion = new global::System.Data.DataColumn("version", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnversion);
                this.columnserie = new global::System.Data.DataColumn("serie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserie);
                this.columnfolio = new global::System.Data.DataColumn("folio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfolio);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnformaDePago = new global::System.Data.DataColumn("formaDePago", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnformaDePago);
                this.columncondicionesDePago = new global::System.Data.DataColumn("condicionesDePago", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncondicionesDePago);
                this.columnsubTotal = new global::System.Data.DataColumn("subTotal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubTotal);
                this.columndescuento = new global::System.Data.DataColumn("descuento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescuento);
                this.columnmotivoDescuento = new global::System.Data.DataColumn("motivoDescuento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmotivoDescuento);
                this.columnTipoCambio = new global::System.Data.DataColumn("TipoCambio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoCambio);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columntotal = new global::System.Data.DataColumn("total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal);
                this.columnmetodoDePago = new global::System.Data.DataColumn("metodoDePago", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmetodoDePago);
                this.columntipoDeComprobante = new global::System.Data.DataColumn("tipoDeComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipoDeComprobante);
                this.columnsello = new global::System.Data.DataColumn("sello", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsello);
                this.columnnoCertificado = new global::System.Data.DataColumn("noCertificado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoCertificado);
                this.columncertificado = new global::System.Data.DataColumn("certificado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificado);
                this.columnerfc = new global::System.Data.DataColumn("erfc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerfc);
                this.columnenombre = new global::System.Data.DataColumn("enombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenombre);
                this.columnecalle = new global::System.Data.DataColumn("ecalle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnecalle);
                this.columnenoExterior = new global::System.Data.DataColumn("enoExterior", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenoExterior);
                this.columnenoInterior = new global::System.Data.DataColumn("enoInterior", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenoInterior);
                this.columnereferencia = new global::System.Data.DataColumn("ereferencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnereferencia);
                this.columnecolonia = new global::System.Data.DataColumn("ecolonia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnecolonia);
                this.columnelocalidad = new global::System.Data.DataColumn("elocalidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnelocalidad);
                this.columnemunicipio = new global::System.Data.DataColumn("emunicipio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemunicipio);
                this.columneestado = new global::System.Data.DataColumn("eestado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneestado);
                this.columnepais = new global::System.Data.DataColumn("epais", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnepais);
                this.columnecodigoPostal = new global::System.Data.DataColumn("ecodigoPostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnecodigoPostal);
                this.columnxcalle = new global::System.Data.DataColumn("xcalle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxcalle);
                this.columnxnoExterior = new global::System.Data.DataColumn("xnoExterior", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxnoExterior);
                this.columnxnoInterior = new global::System.Data.DataColumn("xnoInterior", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxnoInterior);
                this.columnxreferencia = new global::System.Data.DataColumn("xreferencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxreferencia);
                this.columnxcolonia = new global::System.Data.DataColumn("xcolonia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxcolonia);
                this.columnxlocalidad = new global::System.Data.DataColumn("xlocalidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxlocalidad);
                this.columnxmunicipio = new global::System.Data.DataColumn("xmunicipio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxmunicipio);
                this.columnxestado = new global::System.Data.DataColumn("xestado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxestado);
                this.columnxpais = new global::System.Data.DataColumn("xpais", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxpais);
                this.columnxcodigoPostal = new global::System.Data.DataColumn("xcodigoPostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxcodigoPostal);
                this.columnrrfc = new global::System.Data.DataColumn("rrfc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrrfc);
                this.columnrnombre = new global::System.Data.DataColumn("rnombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrnombre);
                this.columnrcalle = new global::System.Data.DataColumn("rcalle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrcalle);
                this.columnrnoExterior = new global::System.Data.DataColumn("rnoExterior", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrnoExterior);
                this.columnrnoInterior = new global::System.Data.DataColumn("rnoInterior", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrnoInterior);
                this.columnrreferencia = new global::System.Data.DataColumn("rreferencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrreferencia);
                this.columnrcolonia = new global::System.Data.DataColumn("rcolonia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrcolonia);
                this.columnrlocalidad = new global::System.Data.DataColumn("rlocalidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrlocalidad);
                this.columnrmunicipio = new global::System.Data.DataColumn("rmunicipio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrmunicipio);
                this.columnrestado = new global::System.Data.DataColumn("restado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrestado);
                this.columnrpais = new global::System.Data.DataColumn("rpais", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrpais);
                this.columnrcodigoPostal = new global::System.Data.DataColumn("rcodigoPostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrcodigoPostal);
                this.columnimpuesto = new global::System.Data.DataColumn("impuesto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpuesto);
                this.columntasa = new global::System.Data.DataColumn("tasa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntasa);
                this.columnimporte = new global::System.Data.DataColumn("importe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimporte);
                this.columnselloCFD = new global::System.Data.DataColumn("selloCFD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnselloCFD);
                this.columnFechaTimbrado = new global::System.Data.DataColumn("FechaTimbrado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaTimbrado);
                this.columnUUID = new global::System.Data.DataColumn("UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUUID);
                this.columnversiont = new global::System.Data.DataColumn("versiont", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnversiont);
                this.columnnoCertificadoSAT = new global::System.Data.DataColumn("noCertificadoSAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoCertificadoSAT);
                this.columnselloSAT = new global::System.Data.DataColumn("selloSAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnselloSAT);
                this.columneTelefono = new global::System.Data.DataColumn("eTelefono", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneTelefono);
                this.columnrTelefono = new global::System.Data.DataColumn("rTelefono", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrTelefono);
                this.columnLogotipo1 = new global::System.Data.DataColumn("Logotipo1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogotipo1);
                this.columnLogotipo2 = new global::System.Data.DataColumn("Logotipo2", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogotipo2);
                this.columnCBBQR = new global::System.Data.DataColumn("CBBQR", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBBQR);
                this.columnEncaCFD = new global::System.Data.DataColumn("EncaCFD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEncaCFD);
                this.columnEncaTitulo1 = new global::System.Data.DataColumn("EncaTitulo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEncaTitulo1);
                this.columnEncaTitulo2 = new global::System.Data.DataColumn("EncaTitulo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEncaTitulo2);
                this.columnEncaTitulo3 = new global::System.Data.DataColumn("EncaTitulo3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEncaTitulo3);
                this.columnNota1 = new global::System.Data.DataColumn("Nota1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNota1);
                this.columnNota2 = new global::System.Data.DataColumn("Nota2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNota2);
                this.columnNota3 = new global::System.Data.DataColumn("Nota3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNota3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("FacturaGKey1", new global::System.Data.DataColumn[] {
                                this.columnserie,
                                this.columnfolio}, false));
                this.columnversion.Caption = "DataColumn1";
                this.columnserie.Caption = "DataColumn2";
                this.columnfolio.Caption = "DataColumn3";
                this.columnfecha.Caption = "DataColumn4";
                this.columnformaDePago.Caption = "DataColumn5";
                this.columnsubTotal.Caption = "DataColumn1";
                this.columnTipoCambio.Caption = "DataColumn2";
                this.columnMoneda.Caption = "DataColumn3";
                this.columntotal.Caption = "DataColumn4";
                this.columnmetodoDePago.Caption = "DataColumn5";
                this.columntipoDeComprobante.Caption = "DataColumn1";
                this.columnsello.Caption = "DataColumn2";
                this.columnnoCertificado.Caption = "DataColumn3";
                this.columncertificado.Caption = "DataColumn4";
                this.columnerfc.Caption = "DataColumn5";
                this.columnenombre.Caption = "DataColumn1";
                this.columnecalle.Caption = "DataColumn2";
                this.columnenoExterior.Caption = "DataColumn3";
                this.columnecolonia.Caption = "DataColumn4";
                this.columnemunicipio.Caption = "DataColumn5";
                this.columneestado.Caption = "DataColumn1";
                this.columnepais.Caption = "DataColumn2";
                this.columnxcalle.Caption = "DataColumn3";
                this.columnxnoExterior.Caption = "DataColumn4";
                this.columnxcolonia.Caption = "DataColumn5";
                this.columnxmunicipio.Caption = "DataColumn1";
                this.columnxestado.Caption = "DataColumn2";
                this.columnxpais.Caption = "DataColumn3";
                this.columnrrfc.Caption = "DataColumn4";
                this.columnrnombre.Caption = "DataColumn5";
                this.columnrcalle.Caption = "DataColumn1";
                this.columnrnoExterior.Caption = "DataColumn2";
                this.columnrcolonia.Caption = "DataColumn3";
                this.columnrmunicipio.Caption = "DataColumn5";
                this.columnrestado.Caption = "DataColumn1";
                this.columnrpais.Caption = "DataColumn2";
                this.columnrcodigoPostal.Caption = "ecodigoPostal";
                this.columnimpuesto.Caption = "DataColumn4";
                this.columntasa.Caption = "DataColumn5";
                this.columnimporte.Caption = "DataColumn1";
                this.columnselloCFD.Caption = "DataColumn2";
                this.columnFechaTimbrado.Caption = "DataColumn3";
                this.columnUUID.Caption = "DataColumn4";
                this.columnversiont.Caption = "DataColumn5";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaGRow NewFacturaGRow() {
                return ((FacturaGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FacturaGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FacturaGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FacturaGRowChanged != null)) {
                    this.FacturaGRowChanged(this, new FacturaGRowChangeEvent(((FacturaGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FacturaGRowChanging != null)) {
                    this.FacturaGRowChanging(this, new FacturaGRowChangeEvent(((FacturaGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FacturaGRowDeleted != null)) {
                    this.FacturaGRowDeleted(this, new FacturaGRowChangeEvent(((FacturaGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FacturaGRowDeleting != null)) {
                    this.FacturaGRowDeleting(this, new FacturaGRowChangeEvent(((FacturaGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFacturaGRow(FacturaGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepImpCFD ds = new RepImpCFD();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FacturaGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FacturaDDataTable : global::System.Data.TypedTableBase<FacturaDRow> {
            
            private global::System.Data.DataColumn columnserie;
            
            private global::System.Data.DataColumn columnfolio;
            
            private global::System.Data.DataColumn columnnoIdentificacion;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columnunidad;
            
            private global::System.Data.DataColumn columndescripcion;
            
            private global::System.Data.DataColumn columnvalorUnitario;
            
            private global::System.Data.DataColumn columnimporte;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaDDataTable() {
                this.TableName = "FacturaD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FacturaDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FacturaDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn serieColumn {
                get {
                    return this.columnserie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn folioColumn {
                get {
                    return this.columnfolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noIdentificacionColumn {
                get {
                    return this.columnnoIdentificacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unidadColumn {
                get {
                    return this.columnunidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descripcionColumn {
                get {
                    return this.columndescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorUnitarioColumn {
                get {
                    return this.columnvalorUnitario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn importeColumn {
                get {
                    return this.columnimporte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaDRow this[int index] {
                get {
                    return ((FacturaDRow)(this.Rows[index]));
                }
            }
            
            public event FacturaDRowChangeEventHandler FacturaDRowChanging;
            
            public event FacturaDRowChangeEventHandler FacturaDRowChanged;
            
            public event FacturaDRowChangeEventHandler FacturaDRowDeleting;
            
            public event FacturaDRowChangeEventHandler FacturaDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFacturaDRow(FacturaDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaDRow AddFacturaDRow(string serie, string folio, string noIdentificacion, string cantidad, string unidad, string descripcion, string valorUnitario, string importe) {
                FacturaDRow rowFacturaDRow = ((FacturaDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        serie,
                        folio,
                        noIdentificacion,
                        cantidad,
                        unidad,
                        descripcion,
                        valorUnitario,
                        importe};
                rowFacturaDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFacturaDRow);
                return rowFacturaDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FacturaDDataTable cln = ((FacturaDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FacturaDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnserie = base.Columns["serie"];
                this.columnfolio = base.Columns["folio"];
                this.columnnoIdentificacion = base.Columns["noIdentificacion"];
                this.columncantidad = base.Columns["cantidad"];
                this.columnunidad = base.Columns["unidad"];
                this.columndescripcion = base.Columns["descripcion"];
                this.columnvalorUnitario = base.Columns["valorUnitario"];
                this.columnimporte = base.Columns["importe"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnserie = new global::System.Data.DataColumn("serie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserie);
                this.columnfolio = new global::System.Data.DataColumn("folio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfolio);
                this.columnnoIdentificacion = new global::System.Data.DataColumn("noIdentificacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoIdentificacion);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columnunidad = new global::System.Data.DataColumn("unidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunidad);
                this.columndescripcion = new global::System.Data.DataColumn("descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescripcion);
                this.columnvalorUnitario = new global::System.Data.DataColumn("valorUnitario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorUnitario);
                this.columnimporte = new global::System.Data.DataColumn("importe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimporte);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("FacturaDKey1", new global::System.Data.DataColumn[] {
                                this.columnserie,
                                this.columnfolio,
                                this.columnnoIdentificacion}, false));
                this.columnserie.Caption = "DataColumn1";
                this.columnfolio.Caption = "DataColumn1";
                this.columnnoIdentificacion.Caption = "DataColumn1";
                this.columncantidad.Caption = "DataColumn1";
                this.columnunidad.Caption = "DataColumn1";
                this.columndescripcion.Caption = "DataColumn1";
                this.columnvalorUnitario.Caption = "DataColumn1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaDRow NewFacturaDRow() {
                return ((FacturaDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FacturaDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FacturaDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FacturaDRowChanged != null)) {
                    this.FacturaDRowChanged(this, new FacturaDRowChangeEvent(((FacturaDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FacturaDRowChanging != null)) {
                    this.FacturaDRowChanging(this, new FacturaDRowChangeEvent(((FacturaDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FacturaDRowDeleted != null)) {
                    this.FacturaDRowDeleted(this, new FacturaDRowChangeEvent(((FacturaDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FacturaDRowDeleting != null)) {
                    this.FacturaDRowDeleting(this, new FacturaDRowChangeEvent(((FacturaDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFacturaDRow(FacturaDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepImpCFD ds = new RepImpCFD();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FacturaDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FacturaGRow : global::System.Data.DataRow {
            
            private FacturaGDataTable tableFacturaG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FacturaGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFacturaG = ((FacturaGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string version {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.versionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'version\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.versionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string serie {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.serieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serie\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.serieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string folio {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.folioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'folio\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.folioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fecha {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string formaDePago {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.formaDePagoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'formaDePago\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.formaDePagoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string condicionesDePago {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.condicionesDePagoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'condicionesDePago\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.condicionesDePagoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subTotal {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.subTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subTotal\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.subTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descuento {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.descuentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descuento\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.descuentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string motivoDescuento {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.motivoDescuentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'motivoDescuento\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.motivoDescuentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoCambio {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.TipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoCambio\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.TipoCambioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moneda\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.MonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string total {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.totalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.totalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string metodoDePago {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.metodoDePagoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'metodoDePago\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.metodoDePagoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tipoDeComprobante {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.tipoDeComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipoDeComprobante\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.tipoDeComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sello {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.selloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sello\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.selloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noCertificado {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.noCertificadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noCertificado\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.noCertificadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string certificado {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.certificadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificado\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.certificadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string erfc {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.erfcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'erfc\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.erfcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string enombre {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.enombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'enombre\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.enombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ecalle {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.ecalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ecalle\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.ecalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string enoExterior {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.enoExteriorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'enoExterior\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.enoExteriorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string enoInterior {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.enoInteriorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'enoInterior\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.enoInteriorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ereferencia {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.ereferenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ereferencia\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.ereferenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ecolonia {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.ecoloniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ecolonia\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.ecoloniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string elocalidad {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.elocalidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'elocalidad\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.elocalidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emunicipio {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.emunicipioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emunicipio\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.emunicipioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eestado {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.eestadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eestado\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.eestadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string epais {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.epaisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'epais\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.epaisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ecodigoPostal {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.ecodigoPostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ecodigoPostal\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.ecodigoPostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xcalle {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.xcalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xcalle\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.xcalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xnoExterior {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.xnoExteriorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xnoExterior\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.xnoExteriorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xnoInterior {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.xnoInteriorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xnoInterior\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.xnoInteriorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xreferencia {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.xreferenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xreferencia\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.xreferenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xcolonia {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.xcoloniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xcolonia\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.xcoloniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xlocalidad {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.xlocalidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xlocalidad\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.xlocalidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xmunicipio {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.xmunicipioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xmunicipio\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.xmunicipioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xestado {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.xestadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xestado\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.xestadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xpais {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.xpaisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xpais\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.xpaisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xcodigoPostal {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.xcodigoPostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xcodigoPostal\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.xcodigoPostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rrfc {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rrfcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rrfc\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rrfcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rnombre {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rnombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rnombre\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rnombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rcalle {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rcalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rcalle\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rcalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rnoExterior {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rnoExteriorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rnoExterior\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rnoExteriorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rnoInterior {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rnoInteriorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rnoInterior\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rnoInteriorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rreferencia {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rreferenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rreferencia\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rreferenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rcolonia {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rcoloniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rcolonia\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rcoloniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rlocalidad {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rlocalidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rlocalidad\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rlocalidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rmunicipio {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rmunicipioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rmunicipio\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rmunicipioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string restado {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.restadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'restado\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.restadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rpais {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rpaisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rpais\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rpaisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rcodigoPostal {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rcodigoPostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rcodigoPostal\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rcodigoPostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string impuesto {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.impuestoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'impuesto\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.impuestoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tasa {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.tasaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tasa\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.tasaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string importe {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.importeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'importe\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.importeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string selloCFD {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.selloCFDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'selloCFD\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.selloCFDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FechaTimbrado {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.FechaTimbradoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaTimbrado\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.FechaTimbradoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UUID {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UUID\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string versiont {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.versiontColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'versiont\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.versiontColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noCertificadoSAT {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.noCertificadoSATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noCertificadoSAT\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.noCertificadoSATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string selloSAT {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.selloSATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'selloSAT\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.selloSATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eTelefono {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.eTelefonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eTelefono\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.eTelefonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rTelefono {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.rTelefonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rTelefono\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.rTelefonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Logotipo1 {
                get {
                    try {
                        return ((byte[])(this[this.tableFacturaG.Logotipo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Logotipo1\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.Logotipo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Logotipo2 {
                get {
                    try {
                        return ((byte[])(this[this.tableFacturaG.Logotipo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Logotipo2\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.Logotipo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] CBBQR {
                get {
                    try {
                        return ((byte[])(this[this.tableFacturaG.CBBQRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBBQR\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.CBBQRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EncaCFD {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.EncaCFDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EncaCFD\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.EncaCFDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EncaTitulo1 {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.EncaTitulo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EncaTitulo1\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.EncaTitulo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EncaTitulo2 {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.EncaTitulo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EncaTitulo2\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.EncaTitulo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EncaTitulo3 {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.EncaTitulo3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EncaTitulo3\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.EncaTitulo3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nota1 {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.Nota1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nota1\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.Nota1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nota2 {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.Nota2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nota2\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.Nota2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nota3 {
                get {
                    try {
                        return ((string)(this[this.tableFacturaG.Nota3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nota3\' in table \'FacturaG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaG.Nota3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsversionNull() {
                return this.IsNull(this.tableFacturaG.versionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetversionNull() {
                this[this.tableFacturaG.versionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsserieNull() {
                return this.IsNull(this.tableFacturaG.serieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetserieNull() {
                this[this.tableFacturaG.serieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfolioNull() {
                return this.IsNull(this.tableFacturaG.folioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfolioNull() {
                this[this.tableFacturaG.folioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tableFacturaG.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tableFacturaG.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsformaDePagoNull() {
                return this.IsNull(this.tableFacturaG.formaDePagoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetformaDePagoNull() {
                this[this.tableFacturaG.formaDePagoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscondicionesDePagoNull() {
                return this.IsNull(this.tableFacturaG.condicionesDePagoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcondicionesDePagoNull() {
                this[this.tableFacturaG.condicionesDePagoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubTotalNull() {
                return this.IsNull(this.tableFacturaG.subTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubTotalNull() {
                this[this.tableFacturaG.subTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescuentoNull() {
                return this.IsNull(this.tableFacturaG.descuentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescuentoNull() {
                this[this.tableFacturaG.descuentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmotivoDescuentoNull() {
                return this.IsNull(this.tableFacturaG.motivoDescuentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmotivoDescuentoNull() {
                this[this.tableFacturaG.motivoDescuentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoCambioNull() {
                return this.IsNull(this.tableFacturaG.TipoCambioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoCambioNull() {
                this[this.tableFacturaG.TipoCambioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tableFacturaG.MonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tableFacturaG.MonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalNull() {
                return this.IsNull(this.tableFacturaG.totalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalNull() {
                this[this.tableFacturaG.totalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmetodoDePagoNull() {
                return this.IsNull(this.tableFacturaG.metodoDePagoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmetodoDePagoNull() {
                this[this.tableFacturaG.metodoDePagoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipoDeComprobanteNull() {
                return this.IsNull(this.tableFacturaG.tipoDeComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipoDeComprobanteNull() {
                this[this.tableFacturaG.tipoDeComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsselloNull() {
                return this.IsNull(this.tableFacturaG.selloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetselloNull() {
                this[this.tableFacturaG.selloColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoCertificadoNull() {
                return this.IsNull(this.tableFacturaG.noCertificadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoCertificadoNull() {
                this[this.tableFacturaG.noCertificadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscertificadoNull() {
                return this.IsNull(this.tableFacturaG.certificadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcertificadoNull() {
                this[this.tableFacturaG.certificadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IserfcNull() {
                return this.IsNull(this.tableFacturaG.erfcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeterfcNull() {
                this[this.tableFacturaG.erfcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenombreNull() {
                return this.IsNull(this.tableFacturaG.enombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenombreNull() {
                this[this.tableFacturaG.enombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsecalleNull() {
                return this.IsNull(this.tableFacturaG.ecalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetecalleNull() {
                this[this.tableFacturaG.ecalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenoExteriorNull() {
                return this.IsNull(this.tableFacturaG.enoExteriorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenoExteriorNull() {
                this[this.tableFacturaG.enoExteriorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenoInteriorNull() {
                return this.IsNull(this.tableFacturaG.enoInteriorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenoInteriorNull() {
                this[this.tableFacturaG.enoInteriorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsereferenciaNull() {
                return this.IsNull(this.tableFacturaG.ereferenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetereferenciaNull() {
                this[this.tableFacturaG.ereferenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsecoloniaNull() {
                return this.IsNull(this.tableFacturaG.ecoloniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetecoloniaNull() {
                this[this.tableFacturaG.ecoloniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IselocalidadNull() {
                return this.IsNull(this.tableFacturaG.elocalidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetelocalidadNull() {
                this[this.tableFacturaG.elocalidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemunicipioNull() {
                return this.IsNull(this.tableFacturaG.emunicipioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemunicipioNull() {
                this[this.tableFacturaG.emunicipioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseestadoNull() {
                return this.IsNull(this.tableFacturaG.eestadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteestadoNull() {
                this[this.tableFacturaG.eestadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsepaisNull() {
                return this.IsNull(this.tableFacturaG.epaisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetepaisNull() {
                this[this.tableFacturaG.epaisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsecodigoPostalNull() {
                return this.IsNull(this.tableFacturaG.ecodigoPostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetecodigoPostalNull() {
                this[this.tableFacturaG.ecodigoPostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxcalleNull() {
                return this.IsNull(this.tableFacturaG.xcalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxcalleNull() {
                this[this.tableFacturaG.xcalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxnoExteriorNull() {
                return this.IsNull(this.tableFacturaG.xnoExteriorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxnoExteriorNull() {
                this[this.tableFacturaG.xnoExteriorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxnoInteriorNull() {
                return this.IsNull(this.tableFacturaG.xnoInteriorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxnoInteriorNull() {
                this[this.tableFacturaG.xnoInteriorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxreferenciaNull() {
                return this.IsNull(this.tableFacturaG.xreferenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxreferenciaNull() {
                this[this.tableFacturaG.xreferenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxcoloniaNull() {
                return this.IsNull(this.tableFacturaG.xcoloniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxcoloniaNull() {
                this[this.tableFacturaG.xcoloniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxlocalidadNull() {
                return this.IsNull(this.tableFacturaG.xlocalidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxlocalidadNull() {
                this[this.tableFacturaG.xlocalidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxmunicipioNull() {
                return this.IsNull(this.tableFacturaG.xmunicipioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxmunicipioNull() {
                this[this.tableFacturaG.xmunicipioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxestadoNull() {
                return this.IsNull(this.tableFacturaG.xestadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxestadoNull() {
                this[this.tableFacturaG.xestadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxpaisNull() {
                return this.IsNull(this.tableFacturaG.xpaisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxpaisNull() {
                this[this.tableFacturaG.xpaisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxcodigoPostalNull() {
                return this.IsNull(this.tableFacturaG.xcodigoPostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxcodigoPostalNull() {
                this[this.tableFacturaG.xcodigoPostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrrfcNull() {
                return this.IsNull(this.tableFacturaG.rrfcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrrfcNull() {
                this[this.tableFacturaG.rrfcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrnombreNull() {
                return this.IsNull(this.tableFacturaG.rnombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrnombreNull() {
                this[this.tableFacturaG.rnombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrcalleNull() {
                return this.IsNull(this.tableFacturaG.rcalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrcalleNull() {
                this[this.tableFacturaG.rcalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrnoExteriorNull() {
                return this.IsNull(this.tableFacturaG.rnoExteriorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrnoExteriorNull() {
                this[this.tableFacturaG.rnoExteriorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrnoInteriorNull() {
                return this.IsNull(this.tableFacturaG.rnoInteriorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrnoInteriorNull() {
                this[this.tableFacturaG.rnoInteriorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrreferenciaNull() {
                return this.IsNull(this.tableFacturaG.rreferenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrreferenciaNull() {
                this[this.tableFacturaG.rreferenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrcoloniaNull() {
                return this.IsNull(this.tableFacturaG.rcoloniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrcoloniaNull() {
                this[this.tableFacturaG.rcoloniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrlocalidadNull() {
                return this.IsNull(this.tableFacturaG.rlocalidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrlocalidadNull() {
                this[this.tableFacturaG.rlocalidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrmunicipioNull() {
                return this.IsNull(this.tableFacturaG.rmunicipioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrmunicipioNull() {
                this[this.tableFacturaG.rmunicipioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrestadoNull() {
                return this.IsNull(this.tableFacturaG.restadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrestadoNull() {
                this[this.tableFacturaG.restadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrpaisNull() {
                return this.IsNull(this.tableFacturaG.rpaisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrpaisNull() {
                this[this.tableFacturaG.rpaisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrcodigoPostalNull() {
                return this.IsNull(this.tableFacturaG.rcodigoPostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrcodigoPostalNull() {
                this[this.tableFacturaG.rcodigoPostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimpuestoNull() {
                return this.IsNull(this.tableFacturaG.impuestoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimpuestoNull() {
                this[this.tableFacturaG.impuestoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstasaNull() {
                return this.IsNull(this.tableFacturaG.tasaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettasaNull() {
                this[this.tableFacturaG.tasaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimporteNull() {
                return this.IsNull(this.tableFacturaG.importeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimporteNull() {
                this[this.tableFacturaG.importeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsselloCFDNull() {
                return this.IsNull(this.tableFacturaG.selloCFDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetselloCFDNull() {
                this[this.tableFacturaG.selloCFDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaTimbradoNull() {
                return this.IsNull(this.tableFacturaG.FechaTimbradoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaTimbradoNull() {
                this[this.tableFacturaG.FechaTimbradoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUUIDNull() {
                return this.IsNull(this.tableFacturaG.UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUUIDNull() {
                this[this.tableFacturaG.UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsversiontNull() {
                return this.IsNull(this.tableFacturaG.versiontColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetversiontNull() {
                this[this.tableFacturaG.versiontColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoCertificadoSATNull() {
                return this.IsNull(this.tableFacturaG.noCertificadoSATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoCertificadoSATNull() {
                this[this.tableFacturaG.noCertificadoSATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsselloSATNull() {
                return this.IsNull(this.tableFacturaG.selloSATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetselloSATNull() {
                this[this.tableFacturaG.selloSATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseTelefonoNull() {
                return this.IsNull(this.tableFacturaG.eTelefonoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteTelefonoNull() {
                this[this.tableFacturaG.eTelefonoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrTelefonoNull() {
                return this.IsNull(this.tableFacturaG.rTelefonoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrTelefonoNull() {
                this[this.tableFacturaG.rTelefonoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogotipo1Null() {
                return this.IsNull(this.tableFacturaG.Logotipo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogotipo1Null() {
                this[this.tableFacturaG.Logotipo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogotipo2Null() {
                return this.IsNull(this.tableFacturaG.Logotipo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogotipo2Null() {
                this[this.tableFacturaG.Logotipo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCBBQRNull() {
                return this.IsNull(this.tableFacturaG.CBBQRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCBBQRNull() {
                this[this.tableFacturaG.CBBQRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEncaCFDNull() {
                return this.IsNull(this.tableFacturaG.EncaCFDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEncaCFDNull() {
                this[this.tableFacturaG.EncaCFDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEncaTitulo1Null() {
                return this.IsNull(this.tableFacturaG.EncaTitulo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEncaTitulo1Null() {
                this[this.tableFacturaG.EncaTitulo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEncaTitulo2Null() {
                return this.IsNull(this.tableFacturaG.EncaTitulo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEncaTitulo2Null() {
                this[this.tableFacturaG.EncaTitulo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEncaTitulo3Null() {
                return this.IsNull(this.tableFacturaG.EncaTitulo3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEncaTitulo3Null() {
                this[this.tableFacturaG.EncaTitulo3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNota1Null() {
                return this.IsNull(this.tableFacturaG.Nota1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNota1Null() {
                this[this.tableFacturaG.Nota1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNota2Null() {
                return this.IsNull(this.tableFacturaG.Nota2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNota2Null() {
                this[this.tableFacturaG.Nota2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNota3Null() {
                return this.IsNull(this.tableFacturaG.Nota3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNota3Null() {
                this[this.tableFacturaG.Nota3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaDRow[] GetFacturaDRows() {
                if ((this.Table.ChildRelations["FacturaG_FacturaD"] == null)) {
                    return new FacturaDRow[0];
                }
                else {
                    return ((FacturaDRow[])(base.GetChildRows(this.Table.ChildRelations["FacturaG_FacturaD"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FacturaDRow : global::System.Data.DataRow {
            
            private FacturaDDataTable tableFacturaD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FacturaDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFacturaD = ((FacturaDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string serie {
                get {
                    try {
                        return ((string)(this[this.tableFacturaD.serieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serie\' in table \'FacturaD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaD.serieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string folio {
                get {
                    try {
                        return ((string)(this[this.tableFacturaD.folioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'folio\' in table \'FacturaD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaD.folioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noIdentificacion {
                get {
                    try {
                        return ((string)(this[this.tableFacturaD.noIdentificacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noIdentificacion\' in table \'FacturaD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaD.noIdentificacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tableFacturaD.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'FacturaD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaD.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string unidad {
                get {
                    try {
                        return ((string)(this[this.tableFacturaD.unidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unidad\' in table \'FacturaD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaD.unidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descripcion {
                get {
                    try {
                        return ((string)(this[this.tableFacturaD.descripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descripcion\' in table \'FacturaD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaD.descripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string valorUnitario {
                get {
                    try {
                        return ((string)(this[this.tableFacturaD.valorUnitarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorUnitario\' in table \'FacturaD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaD.valorUnitarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string importe {
                get {
                    try {
                        return ((string)(this[this.tableFacturaD.importeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'importe\' in table \'FacturaD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaD.importeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaGRow FacturaGRowParent {
                get {
                    return ((FacturaGRow)(this.GetParentRow(this.Table.ParentRelations["FacturaG_FacturaD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FacturaG_FacturaD"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsserieNull() {
                return this.IsNull(this.tableFacturaD.serieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetserieNull() {
                this[this.tableFacturaD.serieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfolioNull() {
                return this.IsNull(this.tableFacturaD.folioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfolioNull() {
                this[this.tableFacturaD.folioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoIdentificacionNull() {
                return this.IsNull(this.tableFacturaD.noIdentificacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoIdentificacionNull() {
                this[this.tableFacturaD.noIdentificacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tableFacturaD.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tableFacturaD.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunidadNull() {
                return this.IsNull(this.tableFacturaD.unidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunidadNull() {
                this[this.tableFacturaD.unidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescripcionNull() {
                return this.IsNull(this.tableFacturaD.descripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescripcionNull() {
                this[this.tableFacturaD.descripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorUnitarioNull() {
                return this.IsNull(this.tableFacturaD.valorUnitarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorUnitarioNull() {
                this[this.tableFacturaD.valorUnitarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimporteNull() {
                return this.IsNull(this.tableFacturaD.importeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimporteNull() {
                this[this.tableFacturaD.importeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FacturaGRowChangeEvent : global::System.EventArgs {
            
            private FacturaGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaGRowChangeEvent(FacturaGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FacturaDRowChangeEvent : global::System.EventArgs {
            
            private FacturaDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaDRowChangeEvent(FacturaDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591